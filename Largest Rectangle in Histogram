 //Largest Rectangle in Histogram
class Solution {
    public int largestRectangleArea(int[] arr) {
        Stack<Integer> s=new Stack<>();
        int nextSR[]=new int[arr.length];
        int nextSL[]=new int[arr.length];
        
        for(int i=arr.length-1;i>=0;i--){
            while(!s.isEmpty() && arr[s.peek()]>=arr[i]){ //next smallest right (stroring index)
                s.pop();
            }
            if(s.isEmpty()){
                nextSR[i]=arr.length;
            }
            else{
                nextSR[i]=s.peek();
            }
            s.push(i);
        }
        
        //s.removeAllElements();
        s=new Stack<>();
        for(int i=0;i<arr.length;i++){
            while(!s.isEmpty() && arr[s.peek()]>=arr[i]){ //next smallest left (storing index)
                s.pop();
            }
            if(s.isEmpty()){
                nextSL[i]=-1;
            }
            else{
                nextSL[i]=s.peek();
            }
            s.push(i);
        }
        
        //logic
        int i,max=0,area,k1,k2;
        for(i=0;i<arr.length;i++){ //any one
            k1=nextSL[i];
            k2=nextSR[i];
            area=(arr[i])*(k2-k1-1);
            max=Math.max(area, max);
        }
        return max;
    }
}
